#! UHF and ROHF Composite JK interaction energy test for sodium/water system

molecule mol {
  1 1
  Na     -0.62134778     -0.83649140     -0.10392252
  --
  0 1
  O      0.72608003      0.97874806      0.12101240
  H      1.68902363      0.99417362      0.17325772
  H      0.47192348      1.90746586      0.17792570
  symmetry c1
  no_reorient
  no_com
}

set {
  reference uhf
  scf_type direct
  df_scf_guess false
  basis 6-31G*
  e_convergence 1.0e-10
  screening density
  incfock true
  ints_tolerance 1.0e-12
  linK_ints_tolerance 1.0e-12
}

ref_energy = energy('scf', bsse_type='nocp')

set {
  reference uhf
  scf_type direct_df_linK
  basis 6-31G*
  e_convergence 1.0e-10
  screening density
  incfock true
  ints_tolerance 1.0e-12
  linK_ints_tolerance 1.0e-12
}

test_energy = energy('scf', bsse_type='nocp')
psi4.compare_values(ref_energy, test_energy, 6, "UHF Int Energy (DirectDFJ+LinK)")

set {
  reference uhf
  scf_type linear
  basis 6-31G*
  e_convergence 1.0e-10
  screening density
  incfock true
  ints_tolerance 1.0e-12
  linK_ints_tolerance 1.0e-12
}
cfmm_energy = energy('scf', bsse_type='nocp')
psi4.compare_values(ref_energy, cfmm_energy, 6, "UHF Int Energy (CFMM+LinK)")

set {
  reference rohf
  scf_type direct
  df_scf_guess false
  basis 6-31G*
  e_convergence 1.0e-10
  screening density
  incfock true
  ints_tolerance 1.0e-12
  linK_ints_tolerance 1.0e-12
}

ref_energy = energy('scf', bsse_type='nocp')

set {
  reference rohf
  scf_type direct_df_linK
  basis 6-31G*
  e_convergence 1.0e-10
  screening density
  incfock true
  ints_tolerance 1.0e-12
  linK_ints_tolerance 1.0e-12
}

test_energy = energy('scf', bsse_type='nocp')
psi4.compare_values(ref_energy, test_energy, 6, "ROHF Int Energy (DirectDFJ+LinK)")

set {
  reference rohf
  scf_type linear
  basis 6-31G*
  e_convergence 1.0e-10
  screening density
  incfock true
  ints_tolerance 1.0e-12
  linK_ints_tolerance 1.0e-12
}
cfmm_energy = energy('scf', bsse_type='nocp')
psi4.compare_values(ref_energy, cfmm_energy, 6, "ROHF Int Energy (CFMM+LinK)")